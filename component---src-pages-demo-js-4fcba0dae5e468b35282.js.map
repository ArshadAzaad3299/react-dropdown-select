{"version":3,"sources":["webpack:///./src/pages/demo.js"],"names":["Demo","props","getObjectKeys","obj","keyList","Object","keys","map","k","forEach","f","push","concat","apply","setValues","values","setState","contentRenderer","state","length","options","noDataRenderer","style","textAlign","itemRenderer","item","methods","key","valueField","onClick","addItem","margin","type","checked","isSelected","labelField","dropdownRenderer","regexp","RegExp","search","SearchAndToggle","color","Buttons","areAllSelected","Button","className","clearAll","selectAll","value","onChange","setSearch","placeholder","Items","filter","test","searchBy","option","keepSelectedInList","Item","disabled","indexOf","ItemLabel","optionRenderer","Fragment","event","removeItem","label","inputRenderer","tabIndex","size","getInputSize","dropDown","onClear","multi","loading","find","opt","index","clearable","searchable","create","separator","forceOpen","handle","addPlaceholder","closeOnSelect","dropdownPosition","direction","dropdownHeight","render","this","maxWidth","StyledSelect","keepOpen","dropdownHandle","dropdownGap","onDropdownOpen","onDropdownClose","onClearAll","onSelectAll","noDataLabel","undefined","ClearButton","defaultValue","target","StyledHtmlSelect","StyledInput","JSON","stringify","React","Component","Select"],"mappings":"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","file":"component---src-pages-demo-js-4fcba0dae5e468b35282.js","sourcesContent":["import React from 'react';\n\nimport styled from '@emotion/styled';\n\nimport 'normalize.css';\nimport '../demo-styles.css';\n\nimport '../styles.css';\n\nimport Select from '../../../src';\n\nimport { options } from '../options';\n\nexport class Demo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      multi: true,\n      disabled: false,\n      loading: false,\n      contentRenderer: false,\n      dropdownRenderer: false,\n      inputRenderer: false,\n      itemRenderer: false,\n      optionRenderer: false,\n      noDataRenderer: false,\n      values: options ? [options.find((opt, index) => index === 3)] : [],\n      searchBy: 'name',\n      clearable: false,\n      searchable: true,\n      create: false,\n      separator: false,\n      forceOpen: false,\n      handle: true,\n      addPlaceholder: '+ add',\n      labelField: 'name',\n      valueField: 'email',\n      color: '#0074D9',\n      keepSelectedInList: true,\n      closeOnSelect: false,\n      dropdownPosition: 'bottom',\n      direction: 'ltr',\n      dropdownHeight: '300px'\n    };\n  }\n\n  getObjectKeys = (obj) => {\n    const keyList = Object.keys(obj).map(k => {\n    const keys = [];\n\n    if (typeof obj[k] !== 'string') {\n      Object.keys(obj[k]).forEach((f) => {\n        if (f === 'geo') return;\n\n        return keys.push(`${k}.${f}`);\n      });\n    } else {\n      keys.push(k);\n    }\n\n    return keys;\n  });\n\n  return [].concat.apply([], keyList)\n  };\n\n  setValues = (values) => this.setState({ values });\n\n  contentRenderer = ({ props, state }) => {\n    return (\n      <div>\n        {state.values.length} of {props.options.length} Selected\n      </div>\n    );\n  };\n\n  noDataRenderer = () => {\n    return (\n      <p style={{ textAlign: 'center' }}>\n        <strong>Ooops!</strong> No data found\n      </p>\n    );\n  };\n\n  itemRenderer = ({item, props, methods}) => (\n    <div key={item[props.valueField]} onClick={() => methods.addItem(item)}>\n      <div style={{ margin: '10px' }}>\n        <input type=\"checkbox\" checked={methods.isSelected(item)} />\n        &nbsp;&nbsp;&nbsp;{item[props.labelField]}\n      </div>\n    </div>\n  );\n\n  dropdownRenderer = ({ props, state, methods }) => {\n    const regexp = new RegExp(state.search, 'i');\n\n    return (\n      <div>\n        <SearchAndToggle color={this.state.color}>\n          <Buttons>\n            <div>Search and select:</div>\n            {methods.areAllSelected() ? (\n              <Button className=\"clear\" onClick={methods.clearAll}>\n                Clear all\n              </Button>\n            ) : (\n              <Button onClick={methods.selectAll}>Select all</Button>\n            )}\n          </Buttons>\n          <input\n            type=\"text\"\n            value={state.search}\n            onChange={methods.setSearch}\n            placeholder=\"Type anything\"\n          />\n        </SearchAndToggle>\n        <Items>\n          {props.options\n            .filter((item) => regexp.test(item[props.searchBy] || item[props.labelField]))\n            .map((option) => {\n              if (!this.state.keepSelectedInList && methods.isSelected(option)) {\n                return null;\n              }\n\n              return (\n                <Item\n                  disabled={option.disabled}\n                  key={option[props.valueField]}\n                  onClick={option.disabled ? null : () => methods.addItem(option)}>\n                  <input\n                    type=\"checkbox\"\n                    onChange={() => methods.addItem(option)}\n                    checked={state.values.indexOf(option) !== -1}\n                  />\n                  <ItemLabel>{option[props.labelField]}</ItemLabel>\n                </Item>\n              );\n            })}\n        </Items>\n      </div>\n    );\n  };\n\n  optionRenderer = ({ option, methods }) => (\n    <React.Fragment>\n      <div onClick={(event) => methods.removeItem(event, option, true)}>{option.label}</div>\n    </React.Fragment>\n  );\n\n  inputRenderer = ({ state, methods }) => (\n    <input\n      tabIndex=\"1\"\n      className=\"react-dropdown-select-input\"\n      size={methods.getInputSize()}\n      value={state.search}\n      onClick={() => methods.dropDown('open')}\n      onChange={methods.setSearch}\n      placeholder=\"Type in\"\n    />\n  );\n  onClear = () =>\n    this.setState({\n      values: []\n    });\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        <div>\n          <div style={{ maxWidth: '350px', margin: '0 auto' }}>\n            <StyledSelect\n              placeholder=\"Select peoples\"\n              addPlaceholder={this.state.addPlaceholder}\n              color={this.state.color}\n              disabled={this.state.disabled}\n              loading={this.state.loading}\n              searchBy={this.state.searchBy}\n              separator={this.state.separator}\n              clearable={this.state.clearable}\n              searchable={this.state.searchable}\n              create={this.state.create}\n              keepOpen={this.state.forceOpen}\n              dropdownHandle={this.state.handle}\n              dropdownHeight={this.state.dropdownHeight}\n              direction={this.state.direction}\n              multi={this.state.multi}\n              values={this.state.values}\n              labelField={this.state.labelField || 'name'}\n              valueField={this.state.valueField || 'email'}\n              options={options}\n              dropdownGap={5}\n              keepSelectedInList={this.state.keepSelectedInList}\n              onDropdownOpen={() => undefined}\n              onDropdownClose={() => undefined}\n              onClearAll={() => undefined}\n              onSelectAll={() => undefined}\n              onChange={(values) => this.setValues(values)}\n              noDataLabel=\"No matches found\"\n              closeOnSelect={this.state.closeOnSelect}\n              noDataRenderer={this.state.noDataRenderer ? () => this.noDataRenderer() : undefined}\n              dropdownPosition={this.state.dropdownPosition}\n              itemRenderer={\n                this.state.itemRenderer\n                  ? this.itemRenderer\n                  : undefined\n              }\n              inputRenderer={\n                this.state.inputRenderer\n                  ? this.inputRenderer\n                  : undefined\n              }\n              optionRenderer={\n                this.state.optionRenderer\n                  ? this.optionRenderer\n                  : undefined\n              }\n              contentRenderer={\n                this.state.contentRenderer\n                  ? this.contentRenderer\n                  : undefined\n              }\n              dropdownRenderer={\n                this.state.dropdownRenderer\n                  ? this.dropdownRenderer\n                  : undefined\n              }\n            />\n            <ClearButton onClick={this.onClear}>Clear</ClearButton>\n          </div>\n        </div>\n        <p>&nbsp;</p>\n        <p>\n          <input\n            type=\"checkbox\"\n            checked={this.state.multi}\n            onChange={() =>\n              this.setState({\n                multi: !this.state.multi\n              })\n            }\n          />{' '}\n          Multi\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.disabled}\n            onChange={() =>\n              this.setState({\n                disabled: !this.state.disabled\n              })\n            }\n          />{' '}\n          Disabled\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.loading}\n            onChange={() =>\n              this.setState({\n                loading: !this.state.loading\n              })\n            }\n          />{' '}\n          Loading\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.clearable}\n            onChange={() =>\n              this.setState({\n                clearable: !this.state.clearable\n              })\n            }\n          />{' '}\n          Clearable\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.searchable}\n            onChange={() =>\n              this.setState({\n                searchable: !this.state.searchable\n              })\n            }\n          />{' '}\n          Searchable\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.create}\n            onChange={() =>\n              this.setState({\n                create: !this.state.create\n              })\n            }\n          />{' '}\n          Create new entries\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.separator}\n            onChange={() =>\n              this.setState({\n                separator: !this.state.separator\n              })\n            }\n          />{' '}\n          Separator\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.handle}\n            onChange={() =>\n              this.setState({\n                handle: !this.state.handle\n              })\n            }\n          />{' '}\n          Dropdown handle\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.forceOpen}\n            onChange={() =>\n              this.setState({\n                forceOpen: !this.state.forceOpen\n              })\n            }\n          />{' '}\n          Stay open\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.contentRenderer}\n            onChange={() =>\n              this.setState({\n                contentRenderer: !this.state.contentRenderer\n              })\n            }\n          />{' '}\n          Custom content renderer\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.dropdownRenderer}\n            onChange={() =>\n              this.setState({\n                dropdownRenderer: !this.state.dropdownRenderer\n              })\n            }\n          />{' '}\n          Custom dropdown renderer\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.itemRenderer}\n            onChange={() =>\n              this.setState({\n                itemRenderer: !this.state.itemRenderer\n              })\n            }\n          />{' '}\n          Custom dropdown item renderer\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.keepSelectedInList}\n            onChange={() =>\n              this.setState({\n                keepSelectedInList: !this.state.keepSelectedInList\n              })\n            }\n          />{' '}\n          Keep selected item in a list\n          <br />\n          <input\n            type=\"checkbox\"\n            checked={this.state.closeOnSelect}\n            onChange={() =>\n              this.setState({\n                closeOnSelect: !this.state.closeOnSelect\n              })\n            }\n          />{' '}\n          Close dropdown on select/deselect\n          <br />\n          Custom color{' '}\n          <input\n            type=\"color\"\n            defaultValue={this.state.color}\n            onChange={(event) =>\n              this.setState({\n                color: event.target.value\n              })\n            }\n          />\n          <br />\n          Dropdown position\n          <StyledHtmlSelect\n            defaultValue={this.state.dropdownPosition}\n            onChange={(event) => this.setState({ dropdownPosition: event.target.value })}>\n            <option value=\"auto\">auto</option>\n            <option value=\"top\">top</option>\n            <option value=\"bottom\">bottom</option>\n          </StyledHtmlSelect>\n          <br />\n          Dropdown Height:{' '}\n          <StyledInput\n            type=\"text\"\n            checked={this.state.dropdownHeight}\n            value={this.state.dropdownHeight}\n            onChange={(event) =>\n              this.setState({\n                dropdownHeight: event.target.value\n              })\n            }\n          />\n          <br />\n          Dropdown direction\n          <StyledHtmlSelect\n            defaultValue={this.state.direction}\n            onChange={(event) => this.setState({ direction: event.target.value })}>\n            <option value=\"auto\">auto</option>\n            <option value=\"rtl\">right-to-left</option>\n            <option value=\"ltr\">left-to-right</option>\n          </StyledHtmlSelect>\n          <br />\n          Add placeholder:{' '}\n          <StyledInput\n            type=\"text\"\n            checked={this.state.addPlaceholder}\n            value={this.state.addPlaceholder}\n            onChange={(event) =>\n              this.setState({\n                addPlaceholder: event.target.value\n              })\n            }\n          />\n          <br />\n          Search by field:{' '}\n          <StyledHtmlSelect\n            defaultValue={this.state.searchBy}\n            onChange={(event) => this.setState({ searchBy: event.target.value })}>\n            {this.getObjectKeys(options[0]).map((f) => (\n              <option key={f} value={f}>\n                {f}\n              </option>\n            ))}\n          </StyledHtmlSelect>\n          <br />\n          Label field:{' '}\n          <StyledHtmlSelect\n            defaultValue={this.state.labelField}\n            onChange={(event) =>\n              this.setState({\n                labelField: event.target.value,\n                searchBy: event.target.value\n              })\n            }>\n            {this.getObjectKeys(options[0]).map((f) => (\n              <option key={f} value={f}>\n                {f}\n              </option>\n            ))}\n          </StyledHtmlSelect>\n          <br />\n          Value field:{' '}\n          <StyledHtmlSelect\n            defaultValue={this.state.valueField}\n            onChange={(event) => this.setState({ valueField: event.target.value })}>\n            {this.getObjectKeys(options[0]).map((f) => (\n              <option key={f} value={f}>\n                {f}\n              </option>\n            ))}\n          </StyledHtmlSelect>\n        </p>\n\n        <details>\n          <summary>Options:</summary>\n          <pre>{JSON.stringify(options, null, 2)}</pre>\n        </details>\n\n        <details>\n          <summary>Selected values:</summary>\n          <pre>{JSON.stringify(this.state.values, null, 2)}</pre>\n        </details>\n      </div>\n    );\n  }\n}\n\nconst StyledSelect = styled(Select)`\n  ${({ dropdownRenderer }) =>\n    dropdownRenderer &&\n    `\n\t\t.react-dropdown-select-dropdown {\n\t\t\toverflow: initial;\n\t\t}\n\t`}\n`;\n\nconst SearchAndToggle = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  input {\n    margin: 10px 10px 0;\n    line-height: 30px;\n    padding: 0 20px;\n    border: 1px solid #ccc;\n    border-radius: 3px;\n    :focus {\n      outline: none;\n      border: 1px solid ${({ color }) => color};\n    }\n  }\n`;\n\nconst Items = styled.div`\n  overflow: auto;\n  min-height: 10px;\n  max-height: 200px;\n`;\n\nconst Item = styled.div`\n  display: flex;\n  margin: 10px;\n  align-items: baseline;\n  cursor: pointer;\n  border-bottom: 1px dotted transparent;\n\n  :hover {\n    border-bottom: 1px dotted #ccc;\n  }\n\n  ${({ disabled }) =>\n    disabled\n      ? `\n  \topacity: 0.5;\n  \tpointer-events: none;\n  \tcursor: not-allowed;\n  `\n      : ''}\n`;\n\nconst ItemLabel = styled.div`\n  margin: 5px 10px;\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  & div {\n    margin: 10px 0 0 10px;\n    font-weight: 600;\n  }\n`;\n\nconst Button = styled.button`\n  background: none;\n  border: 1px solid #555;\n  color: #555;\n  border-radius: 3px;\n  margin: 10px 10px 0;\n  padding: 3px 5px;\n  font-size: 10px;\n  text-transform: uppercase;\n  cursor: pointer;\n  outline: none;\n\n  &.clear {\n    color: tomato;\n    border: 1px solid tomato;\n  }\n\n  :hover {\n    border: 1px solid deepskyblue;\n    color: deepskyblue;\n  }\n`;\n\nconst StyledHtmlSelect = styled.select`\n  padding: 0;\n  margin: 0 0 0 10px;\n  height: 23px !important;\n  color: #0071dc;\n  background: #fff;\n  border: 1px solid #0071dc;\n`;\n\nconst StyledInput = styled.input`\n  margin: 0 0 0 10px;\n  height: 23px !important;\n  color: #0071dc;\n  background: #fff;\n  border: 1px solid #0071dc;\n  border-radius: 3px;\n  padding: 13px 10px;\n  width: 70px;\n`;\n\nconst ClearButton = styled.button`\n  margin: 0;\n  color: #0071dc;\n  background: #fff;\n  border: 1px solid #0071dc;\n  border-radius: 2px;\n  padding: 0 10px;\n  cursor: pointer;\n`;\n\nexport default Demo;\n"],"sourceRoot":""}